Abstraction is the property with which only the essential details are displayed to the user. 
The internal details or the non-essentials details  are not displayed to the user. 
(Hiding complxities or hiding the implementation details from end user)

Eg: An ATM  is considered as just money rendering machine rather than its internal complex details

Consider a real-life example of a person walking to an ATM She only  knows how to withdraw / deposit money. But as the end user , she does not really need to know about how ATM connects with the underlying bank to inform about this transaction ...

This is what abstraction is. 

In java, abstraction is achieved by interfaces and abstract classes. We can achieve 100% abstraction using interfaces.

When to use abstract classes and abstract methods ?

There are situations in which we will want to define a superclass that declares the structure of a given abstraction without providing a complete implementation of every method.(i.e only provide declaration) 
Sometimes we will want to create a superclass that only defines a generalization form that will be shared by all of its subclasses, leaving it to each subclass to fill in the details.
eg : BoundedShape & it's method area

Abstract classes and Abstract methods :  
refer to readme