
Any questions on assignmnt ?
5 Print name of specified subject  topper
(filter , max,optional)
eg : list --> stream --> filter --> max : comp --> get / orElse /orElseThrow
eg :
Subject subject=....
sop("Topper's Name"+list.stream().filter(s -> s.getSubject() == subject).max(Comparator.comparing(Student::getGPA)).get().getName());

11.  Display student details from the map , sorted as per student's roll no. (desc)
eg : TreeMap(Comparator<? super K> comp) : empty TreeMap--populate it putAll(hm)

Comparator<String> comp=(s1,s2)->s2.compareTo(s1);
 TreeMap<String,Student> tm=new TreeMap(comp);
tm.putAll(map);
------------------------
Revise I/O
Which are  the packages for device handling  ? java.io n java.nio
java.io : read/write methods : blocking methods
java.io Consists  of : I/O streams
What is a stream : data transfer medium (bytes)
Devices : console(stdin / stdout : System.in : InputStream  / System.out : PrintStream)
File : File handling streams
Pipe : pipe handling streams
Socket : socket strms .....


To read data from a data src ----> Java app : input stream
To write data from a Java app ----> data sink  : output stream

3 different categories of streams --- 
node streams : device handling streams (meant for abstracting actual device handling from the prog)
platform independent) : un buffered strms
eg : FIS, FOS , FR ,FW , PIS,POS,PR,PW...., SIS

buffering streams :  in case large data transfer : independent of the device
eg : BIS,BR,BOS,BW

Filtering / conversion streams : 
To convert binary data (bytes) ---> prim types / objects
eg : DIS,DOS,OOS,OIS...

Which are 2 types of streams in java.io ?
1. Byte oriented strms
2. char oriented strms


Which are 4 abstract super classes ? : InputStream , OutputStream , Reader , Writer

File Handling Classes ? FIS , FOS , FR , FW


Enter I/O
Objective : Read data from text file using buffer , till EOF(end of file) , filter lines having  line length > 50  , upper case contents n then display it.
Chain of strms : Java App <------BR(fr) <----- FR(fileName)<-----Device: Text File
try(BR br=new BR(new FR(sc.nextLine()))
{
  br.lines().filter(s -> s.length() > 50).map(s->s.toUppercase()).forEach(System.out::println);
}catch-all








Objective : Copy files using buffer.
i/p : src file name 
dest file name

Objective : Copy only lines from src file with length > 40 :  using buffer.
i/p : src file name 
dest file name

Objective : Copy length of lines  from src file with line length > 40 :  using buffer.
i/p : src file name 
dest file name

Objective : Take populated products(list) from sample data.
Accept product category from user. 
Filter out the products from the specified category 
Sort them as per their date
Save sorted product details in a text file using buffer.

Enter Binary Streams for file handling

Need of filtering streams

Objective :Write Java App to accept product details from User n store it in a binary file
Write Java App to  retrieve product details from bin file n display it .

Which are conversion strms ?
DataOutputStream n DataInputStream


Object streams
serialization n de serialization
Objective 
Get populated HashMap of Students . Save these students details into bin file
Restore these details from binary file.



