Packages
Acces Specifiers
Arrays (revision)
static keyword
Enter Inheritance


1. Solve param passing assignment

2. Refer to access specifier table n confirm it with code.

3. Regarding Arrays

In Java, arrays are full-fledged objects. Like objects, arrays are dynamically created & stored on the heap. 

Arrays (like any other object) are  associated with the class. All arrays of the same dimension and type have the same class. The length of an array does not play any role in establishing the array's class. For example, an array of three ints has the same class as an array of three hundred ints.(Name of the class loaded for this : [I) The length of an array is considered part of its instance data.

eg : The class name for single dimension array of ints is "[I". The class name for a three-dimensional array of bytes is "[[[B". The class name for single dimension array of booleans is "[Z"

Array size(length) is fixed.Implicit super class of array is java.lang.Object.


3.1 Create Array of primitive types

Objective -- Accept no of data samples(of type double) from User(using scanner)
Create suitable array & display it using for-loop , to confirm default values.

Accept data from User(scanner) & store it in the array.
Display array data using  for loop.

Display array data using for-each loop

for-each loop(enhanced for loop)
syntax

eg : Display array data using for-each loop
double[] data=new double[sc.nextInt()];
for(double d : data)//d=data[0],d=data[1].....d=data[data.length-1]
 sop(d);

Important statement
Works on a copy of array element.

for-each limitations
1. Can only iterate from 1st elem to last elem , with step size +1
2. Works on a copy of array elems
(can't be used for modifying array elems).

-----------------
3.2 Array of references

Add Box class into "com.sunbeam.core"
Create a tester class  : TestBoxArray : "com.tester"

Objective : Ask user(client) , how many boxes to make ?
sop("Enter how many boxes ?");
Box[] boxes;
//sop(boxes);
boxes=new Box[sc.nextInt()];//size : 5
for(int i=0;i<boxes.length;i++)
 sop(boxes[i]);//5 nulls : only array object is created 
 
Accept Box dims 
for(int i=0;i<boxes.length;i++)
{
   sop("Enter box dims");
   boxes[i]=new Box(sc.nextDouble(),....);
}

Store these details suitably.
1. Display using single for-each loop, box dims n volume

2. Double box width for all boxes having volume > 100.(USE for-each & solve this)


4. static keyword 

5. Enter Inheritance 
refer to "readme inheritance.txt" from today's help.
(read till atleast "Types of Inheritance")